# infra/docker-compose.yml
version: "3.8"

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend-api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: backend-api
    env_file:
      - ../.env
    environment:
      - BROKER_URL=${BROKER_URL}
      - RESULT_BACKEND=${RESULT_BACKEND}
      - WAN_MODEL_PATH=${WAN_MODEL_PATH}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - NVIDIA_VISIBLE_DEVICES=0,1
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0,1
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    depends_on:
      - redis
    networks:
      - app-network

  backend-worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: backend-worker
    env_file:
      - ../.env
    environment:
      - BROKER_URL=${BROKER_URL}
      - RESULT_BACKEND=${RESULT_BACKEND}
      - WAN_MODEL_PATH=${WAN_MODEL_PATH}
      - NVIDIA_VISIBLE_DEVICES=0,1
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0,1
    volumes:
      - ../backend:/app
    command: >
      celery -A app.services.celery_app.celery_app
      worker --loglevel=info --concurrency=1 --hostname=wan_i2v_worker
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    depends_on:
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: demo-frontend
    env_file:
      - ../.env
    environment:
      - VITE_BACKEND_URL=http://backend-api:8000
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
    depends_on:
      - backend-api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
